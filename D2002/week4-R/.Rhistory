guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "dx")+theme_bw()
library(ggplot2)
options(scipen = 5) # prevent scientific notation
getwd()
# Fix and make numeric the Age column
LT$Age["110+"] <- 110
LT$Age <- as.numeric(LT$Age)
# Fix and make numeric the Age column
LT$Age[LT$Age == "110+"] <- 110
LT$Age <- as.numeric(LT$Age)
# LT stands for life table
LT <-  read.table("fltper_1x1.txt",
header=TRUE, # open
fill=TRUE, # fill uneven rows
skip=2 # skip first two rows
)
# Fix and make numeric the Age column
LT$Age[LT$Age == "110+"] <- 110
LT$Age <- as.numeric(LT$Age)
# Get a subset
LT_sub <- LT[LT$Year == "2020",]
# Get Mx, which indicates the mortality rate (capital is population, technically)
Mx <- data.frame(Age = 0:110, qx = Lt_sub$qx)
# Get Mx, which indicates the mortality rate (capital is population, technically)
Mx <- data.frame(Age = 0:110, qx = LT_sub$qx)
?ggplot
?aes
ggplot(Mx, aes(x=Age,y=qx))+geomline()
ggplot(Mx, aes(x=Age,y=qx))+geom_line()
ggplot(Mx, aes(x=Age,y=qx))
ggplot(Mx, aes(x=Age,y=qx))+geom_line()
ggplot(Mx, aes(x=Age,y=qx))+geom_line()+
scale_y_continuous()
ggplot(Mx, aes(x=Age,y=qx))+geom_line()+
scale_y_continuous(trans="log10")
ggplot(Mx, aes(x=Age,y=qx))+geom_line()+
scale_y_continuous(trans="log10")+
theme_bw()
head(LT_sub)
# Address the number of survivors (lx) and pr surviving (px)
lx <- 100000
lx
px <- 1 - Mx$qx
head(px)
px
for (y in 0:110) {
lx[y + 1] <- px * lx[y]
}
lx[0]
lx[1]
for (y in 1:110) {
lx[y + 1] <- px * lx[y]
}
length(px)
px[1]
px[111]
px[112]
px[111]
for (y in 1:110) {
lx[y + 1] <- px[y] * lx[y]
}
length[lx]
# Address the number of survivors (lx) and pr surviving (px)
lx <- 100000 # Initial population, at index lx[1]
length(lx)
px <- 1 - Mx$qx # Calculate various survival rates
length(px) # 111 entries
for (y in 1:110) {
lx[y + 1] <- px[y] * lx[y]
}
length(lx)
# Return to add the survivors column to Mx
Mx$lx <- lex
# Return to add the survivors column to Mx
Mx$lx <- lx
ggplot(Mx, aes(x = Age, y=lx))+geom_line()
dx <- Mx$qx * Mx$lx
Mx$dx <- dx
ggplot(Mx, aes(x=Age, y=dx))+geom_line()
# LifeTable function
LifeTable <- function(qx) {
Age <- 0:110
lx <- 100000
px <- 1 - qx
for (y in 0:110) {
lx[y + 1] <- lx[y] * px[y]
}
dx <- qx * lx
ALL <- data.frame(Age=Age, qx=qx,lx=lx,dx=dx)
return(ALL)
}
LT1 <- LT[LT$Year=="1850",]
LT2 <- LT[LT$Year=="2020",]
ggplot()+
geomline(LT1, aes(x=Age, y=qx, color="1850"))+
geomline(LT2, aes(x=Age, y=qx, color="2020"))+
scale_y_continuous(trans="log10")+
scale_color_manual(values=c("red","blue"))+
labs(x = "Age", y = "qx")+
theme_bw()
ggplot()+
geom_line(LT1, aes(x=Age, y=qx, color="1850"))+
geom_line(LT2, aes(x=Age, y=qx, color="2020"))+
scale_y_continuous(trans="log10")+
scale_color_manual(values=c("red","blue"))+
labs(x = "Age", y = "qx")+
theme_bw()
ggplot()+
geom_line(LT1, aes(x=Age, y=qx, color="1850"))+
geom_line(LT2, aes(x=Age, y=qx, color="2020"))+
scale_y_continuous(trans="log10")+
scale_color_manual(values=c("red","blue"))+
labs(x = "Age", y = "qx")+
theme_bw()
ggplot()+
geom_line(LT1, mapping=aes(x=Age, y=qx, color="1850"))+
geom_line(LT2, mapping=aes(x=Age, y=qx, color="2020"))+
scale_y_continuous(trans="log10")+
scale_color_manual(values=c("red","blue"))+
labs(x = "Age", y = "qx")+
theme_bw()
LT_A <- LifeTable(LT1$qx)
LT_B <- LifeTable(LT2$qx)
# LifeTable function
LifeTable <- function(qx) {
Age <- 0:110
lx <- 100000
px <- 1 - qx
for (y in 1:110) {
lx[y + 1] <- lx[y] * px[y]
}
dx <- qx * lx
ALL <- data.frame(Age=Age, qx=qx,lx=lx,dx=dx)
return(ALL)
}
LT_A <- LifeTable(LT1$qx)
LT_B <- LifeTable(LT2$qx)
head(LT1)
head(LT_A)
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1921"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "lx")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = dx, color = "1921"))+
geom_line(LT_B, mapping = aes(x = Age, y = dx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "dx")+theme_bw()
rm(list=ls())
library(ggplot2)
options(scipen=5)
LT<-read.table("fltper_1x1", header=TRUE, skip=2, fill=TRUE)
LT$Age[LT$Age=="110+"] <- 110
LT$Age <- as.numeric(LT$Age)
library(ggplot2)
options(scipen=5)
LT<-read.table("fltper_1x1.txt", header=TRUE, skip=2, fill=TRUE)
LT$Age[LT$Age=="110+"] <- 110
LT$Age <- as.numeric(LT$Age)
LT_sub<-LT[LT$Year=="2020",]
## first select the probability of dying qx and plot both
Mx <- data.frame(Age = 0:110 ,qx =  LT_sub$qx)
ggplot(Mx,aes(x=Age,y= qx))+geom_line()
ggplot(Mx,aes(x=Age ,y= qx))+geom_line()+
scale_y_continuous(trans = "log10")+
theme_bw()
ggplot(Mx,aes(x=Age,y= qx))+geom_line()
ggplot(Mx,aes(x=Age ,y= qx))+geom_line()+
scale_y_continuous(trans = "log10")+
theme_bw()
lx <- 100000
px<- 1-Mx$qx
for(y in 1:110){
lx[y+1]<- lx[y] * px[y]
}
Mx$lx <-  lx
ggplot(Mx,aes(x=Age,y= lx))+geom_line()
dx <-  Mx$lx * Mx$qx
Mx$dx <-  dx
ggplot(Mx,aes(x= Age,y= dx))+geom_line()
LifeTable<-function(qx){
lx <- 100000
px <- 1-qx
for(y in 1:110){
lx[y+1]<- lx[y] * px[y]
}
dx <- lx*qx
Age<-0:110
ALL<-data.frame(Age = Age, qx = qx,
lx = lx,dx = dx)
return(ALL)
}
LT1<-LT[LT$Year=="1921",]
LT2<-LT[LT$Year=="2020",]
ggplot()+
geom_line(LT1,mapping = aes(x=Age,y=qx,color="1921"))+
geom_line(LT2,mapping = aes(x=Age,y=qx,color="2020"))+
scale_y_continuous(trans = "log10")+
scale_color_manual(values=c("blue","red"))+
labs(x = "Age",y="qx")+theme_bw()
LT_A<-LifeTable(LT1$qx)
LT_B<-LifeTable(LT2$qx)
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1921"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "lx")+theme_bw()
LT1<-LT[LT$Year=="1921",]
LT2<-LT[LT$Year=="2020",]
ggplot()+
geom_line(LT1,mapping = aes(x=Age,y=qx,color="1850"))+
geom_line(LT2,mapping = aes(x=Age,y=qx,color="2020"))+
scale_y_continuous(trans = "log10")+
scale_color_manual(values=c("blue","red"))+
labs(x = "Age",y="qx")+theme_bw()
LT_A<-LifeTable(LT1$qx)
LT_B<-LifeTable(LT2$qx)
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "lx")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = dx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = dx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "dx")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "lx")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
title(main="This")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(title="this", x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
## and plotting them together, dx
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = dx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = dx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "dx")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(title="this", x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
## and plotting them together, dx
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = dx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = dx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "dx")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(title="this", x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("this")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("fasdjiodfj")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("this")
rm(list=ls())
library(ggplot2)
options(scipen = 5) # prevent scientific notation
getwd()
# LT stands for life table
LT <-  read.table("fltper_1x1.txt",
header=TRUE, # open
fill=TRUE, # fill uneven rows
skip=2 # skip first two rows
)
# Fix and make numeric the Age column
LT$Age[LT$Age == "110+"] <- 110
LT$Age <- as.numeric(LT$Age)
# Get a subset
LT_sub <- LT[LT$Year == "2020",]
# Get Mx, which indicates the mortality rate (capital is population, technically)
Mx <- data.frame(Age = 0:110, qx = LT_sub$qx)
ggplot(Mx, aes(x=Age,y=qx))+geom_line()
ggplot(Mx, aes(x=Age,y=qx))+geom_line()+
scale_y_continuous(trans="log10")+
theme_bw()
# Address the number of survivors (lx) and pr surviving (px)
lx <- 100000 # Initial population, at index lx[1]
length(lx) # 1 entry
px <- 1 - Mx$qx # Calculate various survival rates
length(px) # 111 entries
for (y in 1:110) {
lx[y + 1] <- px[y] * lx[y]
}
length(lx) # 111 entries
# Return to add the survivors column to Mx
Mx$lx <- lx
ggplot(Mx, aes(x = Age, y=lx))+geom_line()
dx <- Mx$qx * Mx$lx
Mx$dx <- dx
ggplot(Mx, aes(x=Age, y=dx))+geom_line()
# LifeTable function
LifeTable <- function(qx) {
Age <- 0:110
lx <- 100000
px <- 1 - qx
for (y in 1:110) {
lx[y + 1] <- lx[y] * px[y]
}
dx <- qx * lx
ALL <- data.frame(Age=Age, qx=qx,lx=lx,dx=dx)
return(ALL)
}
# Compare qx on two thingies
LT1 <- LT[LT$Year=="1850",]
LT2 <- LT[LT$Year=="2020",]
ggplot()+
geom_line(LT1,mapping = aes(x=Age,y=qx,color="1850"))+
geom_line(LT2,mapping = aes(x=Age,y=qx,color="2020"))+
scale_y_continuous(trans = "log10")+
scale_color_manual(values=c("blue","red"))+
labs(x = "Age",y="qx")+theme_bw()
LT_A<-LifeTable(LT1$qx)
LT_B<-LifeTable(LT2$qx)
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("this")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = dx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = dx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "dx")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("Number of people left alive at Age, compared at 1850 and 2020. Source: Netherlands (female 1x1)")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("Number of people left alive at Age (1850 vs 2020) Source: Netherlands (female 1x1)")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("purple","orange"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
colors()
View(colors())
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("purple","darkgoldenrod"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("purple","slateblue4"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("purple","tomato2"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+theme_bw()+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("purple","tomato2"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("purple","tomato2"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
library(ggplot2)
options(scipen = 5) # prevent scientific notation
getwd()
# LT stands for life table
LT <-  read.table("fltper_1x1.txt",
header=TRUE, # open
fill=TRUE, # fill uneven rows
skip=2 # skip first two rows
)
# Fix and make numeric the Age column
LT$Age[LT$Age == "110+"] <- 110
LT$Age <- as.numeric(LT$Age)
# Get a subset
LT_sub <- LT[LT$Year == "2020",]
# Get Mx, which indicates the mortality rate (capital is population, technically)
Mx <- data.frame(Age = 0:110, qx = LT_sub$qx)
ggplot(Mx, aes(x=Age,y=qx))+geom_line()
ggplot(Mx, aes(x=Age,y=qx))+geom_line()+
scale_y_continuous(trans="log10")+
theme_bw()
# Address the number of survivors (lx) and pr surviving (px)
lx <- 100000 # Initial population, at index lx[1]
length(lx) # 1 entry
px <- 1 - Mx$qx # Calculate various survival rates
length(px) # 111 entries
for (y in 1:110) {
lx[y + 1] <- px[y] * lx[y]
}
length(lx) # 111 entries
# Return to add the survivors column to Mx
Mx$lx <- lx
ggplot(Mx, aes(x = Age, y=lx))+geom_line()
dx <- Mx$qx * Mx$lx
Mx$dx <- dx
ggplot(Mx, aes(x=Age, y=dx))+geom_line()
# LifeTable function
LifeTable <- function(qx) {
Age <- 0:110
lx <- 100000
px <- 1 - qx
for (y in 1:110) {
lx[y + 1] <- lx[y] * px[y]
}
dx <- qx * lx
ALL <- data.frame(Age=Age, qx=qx,lx=lx,dx=dx)
return(ALL)
}
# Compare qx on two thingies
LT1 <- LT[LT$Year=="1850",]
LT2 <- LT[LT$Year=="2020",]
ggplot()+
geom_line(LT1,mapping = aes(x=Age,y=qx,color="1850"))+
geom_line(LT2,mapping = aes(x=Age,y=qx,color="2020"))+
scale_y_continuous(trans = "log10")+
scale_color_manual(values=c("blue","red"))+
labs(x = "Age",y="qx")+theme_bw()
LT_A<-LifeTable(LT1$qx)
LT_B<-LifeTable(LT2$qx)
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("purple","tomato2"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = dx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = dx, color = "2020"))+
scale_color_manual(values = c("navy","red"))+
guides(color = guide_legend(title = "Year"))+
labs(x = "Age", y = "dx")+theme_bw()
ggplot()+
geom_line(LT_A, mapping = aes(x = Age, y = lx, color = "1850"))+
geom_line(LT_B, mapping = aes(x = Age, y = lx, color = "2020"))+
scale_color_manual(values = c("purple","tomato2"))+
labs(x = "Age (years)", y = "Number of survivors (lx)")+
ggtitle("Number of people left alive at Age (1850 vs 2020), Netherlands (female 1x1)")
